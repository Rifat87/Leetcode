class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int ans = 0;
        int i = 0;
        for ( i = 0; i < numbers.length; i++) {
            
           // ans = bs(numbers, i, target);
            
            int start = i + 1;
            int end = numbers.length - 1;
            while ( start <= end ) {
                int mid = start + ( end - start) / 2;
            
                if (numbers[i] + numbers[mid] == target) {
                    ans = mid;
                    return new int[]{ i+1, ans+1};
                }
             else if ( numbers[i] + numbers[mid] > target) {
                    end = mid - 1;
                }
              else {
                    start = mid + 1;
                 }
             }
        }
        return new int[] {-1, -1};
    }
//     public int bs ( int[] numbers, int i, int target) {
//         int start = i + 1;
//         int end = numbers.length - 1;
//        // int ans
//         while ( start <= end ) {
//             int mid = start + ( end - start) / 2;
            
//             if (i + mid == target) {
//                 ans = mid;
//             }
//             else if ( i + mid > target) {
//                 end = mid - 1;
//             }
//             else {
//                 start = mid + 1;
//             }
//         }
//         return ans;
//     }
}
